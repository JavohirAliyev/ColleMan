@using Microsoft.AspNetCore.Identity
@using ColleMan.Data
@model ColleMan.Models.Collection
@inject UserManager<ApplicationUser> userManager
@inject DatabaseContext _dbContext

@{
    int i = 1;
}
<h2>Items</h2>
<div class="mb-3 ">
    @if ((await userManager.GetUserAsync(User)) == Model.User)
    {
        <a asp-action="CreateItem" asp-controller="User" class="btn btn-success">
            <i class="material-icons me-1">&#xe147;</i>
            <span>Create New</span>
        </a>
    }
    else if (User.IsInRole("Admin"))
    {
        <a asp-action="CreateItemForOtherUser" asp-controller="Admin" asp-route-id="@Model.User.Id" class="btn btn-success">
            <i class="material-icons me-1">&#xe147;</i>
            <span>Create New</span>
        </a>
    }
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead class="table-light">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Tags</th>
                <th scope="col">Created on</th>
                <th scope="col">Details</th>
            </tr>
        </thead>
        @if (Model.Items != null)
        {
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr>
                        <td>@(i++)</td>
                        <td>@item.Name</td>
                        <td class="flex-row">
                            @foreach (var tag in item.Tags)
                            {
                                <span class="badge badge-secondary text-dark m-1">
                                    @tag
                                </span>
                            }
                        </td>
                        <td>@item.DateCreated</td>
                        <td>
                            @if (!User.Identity.IsAuthenticated)
                            {
                                <a asp-action="GetItem" asp-controller="User" asp-route-id="@item.Id" class="btn btn-info btn-sm me-1 mb-1">View</a>
                            }
                            else if (User.IsInRole("Admin") || (await userManager.GetUserAsync(User)).Id == item.Collection.User?.Id)
                            {
                                <a @* asp-action="EditItem" asp-route-id="@item.Id" *@ href="#" class="btn btn-warning btn-sm me-1 mb-1">Edit</a>
                                <a asp-action="GetItem" asp-controller="User" asp-route-id="@item.Id" class="btn btn-info btn-sm me-1 mb-1">View</a>
                                <form asp-action="DeleteItem" asp-controller="User" asp-route-id="@item.Id" method="post" class="d-inline">
                                    <button type="submit" class="btn btn-danger btn-sm mb-1 delete-btn">Delete</button>
                                </form>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        }
    </table>
</div>

<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();

        $('.delete-btn').on('click', function (e) {
            e.preventDefault();
            var form = $(this).closest('form');
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, cancel!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    form.submit();
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    Swal.fire(
                        'Cancelled',
                        'Your item is safe :)',
                        'error'
                    );
                }
            });
        });
    });
</script>
